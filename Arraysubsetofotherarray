Given two arrays: arr1[0..m-1] and arr2[0..n-1]. Find whether arr2[] is a subset of arr1[] or not. Both the arrays are not in sorted order. It may be assumed that elements in both array are distinct.

Examples:
Input: arr1[] = {11, 1, 13, 21, 3, 7}, arr2[] = {11, 3, 7, 1}
Output: arr2[] is a subset of arr1[]

Input: arr1[] = {1, 2, 3, 4, 5, 6}, arr2[] = {1, 2, 4}
Output: arr2[] is a subset of arr1[]

Approach:

Use two loops: The outer loop picks all the elements of arr2[] one by one. The inner loop linearly searches for the element picked by outer loop. 
If all elements are found then return 1, else return 0.

L1 = [11,1,13,21,3,7]
L2 = [11,3,7,1]

Naive BF approach is to use 2 loops

def issubset(L1,L2):
    m = len(L1)
    n = len(L2)

    # By subset,we mean that L2 is completely contained within L1 ( all elements of it or vice versa)
    if m > n or n > m:
       return 1
    else:
        break

   for i in range(0, m):
       for j in range(0,n):
           if L1[i] == L2[j]:
              break

        if (j == m)
              return -1
   return True

print(issubset(L1,L2))
