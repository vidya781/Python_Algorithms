Given two arrays of integers , compute the pair of values ( one value in each array ) with the smallest non-negative difference.
Return the difference.

Input: {1,3,15,11,2}, {23,127,235,19,8}

Output: 3. That is, the pair (11,8)

Solution :

import sys

# function to calculate the difference between two arrays

def findsmallestdifference(A,B,m,n):
    # Sort both arrays using the sort function
    A.sort()
    B.sort()
    
    a = 0
    b = 0
    
    result = sys.maxsize
    
    # scan both arrays upto the size of the arrays
    while ( a < m and b < n) :
         if ( abs(A[a] - B[b]) < result):
              result = abs(A[a] - B[b])
              
          # Move smaller value
          if(A[a] < B[b]):
              a += 1
          else:
              b += 1
     return result
     
   # Driver code
   
   # Input given array A
   
   A = [1,2,11,5]
   
   # Input given array B
   
   B = [4,12,19,23,127,235]
   
   m = len(A)
   n = len(B)
   
   # Call function to print the smallest difference
   print(findsmallestdifference(A,B,m,n))
   
 Overall run time is O(mlogm + nlogn)
