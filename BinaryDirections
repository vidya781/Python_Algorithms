"""" The objective of this program is to read a text file containing numbers in decimal format, convert it into binary and count the number of 1's and 0's.
Then if the number of 1s are greater than 0's print direction as right, if equal go straight, else go left"""

Approach/Idea

1] Read the numbers sequentially into a list from the external file
2] Develop a small helper function to convert to binary and apply this to the list in step 1
3] Get a count of 1's and 0's and create a new list to hold the directions as per the condition of the problem

f = open("datadirection.txt",'r+')    # Assuming the data is kept in local machine in a file called by the same name
L = f.readlines()
f.close()
L = map(str.strip,L)
L = [int(x) for x in L]
binarylist = []   # to hold binary strings

def decToBin(num):
    if num==0: return ''
    else:
        return decToBin(num/2) + str(num%2)

binList = []

for num in L:
    binList.append(decToBin(num))
    # binList = [int(x) for x in binList]  # No need to convert exclusively to number, can keep as strings, all we need are counts of 1's and 0's
print(binList)

directions = []

def givedirections(binList):
    directions = []
    for item in binList:
        if item.count('1') > item.count('0'):
            directions.append('right')
        elif item.count('1') < item.count('0'):
            directions.append('left')
        else:
            directions.append('straight')
    return directions

print(givedirections(binList))
