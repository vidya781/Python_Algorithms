Given a string of length n and integer k. The string can be manipulated by taking one of the first k letters and moving 
it to the end of the string.

A program to determine the lexigographically smallest string that can be created after an unlimited numbe rof moves.

Take for example : string daily and k = 1. The transformed string is ailyd.

Solution:

def get_best_word(string,k):
    string = list(string)
    
    if k == 1:
        best = string
        for i in range(1,len(string)):
            if string[i:] + string[:i] < best:
                best = string[i:] + string[:i]
        return ''.join(best)
        
    else:
        return ''.join(sorted(string))
        
 Sorting takes O(nlogn) time and building the new string will require O(n) time.
