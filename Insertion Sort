# Problem statement --- To sort a list in place

Consider the following list and its associated transformations:

[2,3,1,4,5,6]---->[2,1,3,4,5,6]----->[1,2,3,4,5,6]( now completely sorted)

Approach

1) Instead of 2 for loops, take a single while loop and have the condition that if A[0]<A[1], retain the configuration, else swap
2) continue on to the next element wherein A[1] < A[2], go to the next element and perform the same operation, else swap 
3) DO this till the end of the list

def insertionsort(A):
    
    while i <=len(A):
        if A[i]<A[i+1]:
            i += 1  # retain that configuration
        else:
             A[i],A[i+1] = A[i+1],A[i]   # do a swap in place
            i += 1
        return A
  
  
  # Alternate piece of code
  
  a = [16, 19, 11, 15, 10, 12, 14]

#iterating over a
for i in a:
    j = a.index(i)
    #i is not the first element
    while j>0:
        #not in order
        if a[j-1] > a[j]:
            #swap
            a[j-1],a[j] = a[j],a[j-1]
        else:
            #in order
            break
        j = j-1
print (a)
            
