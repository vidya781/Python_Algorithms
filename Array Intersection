# Problem Statement

Given two arrays, write a function to return the common elements if there are any or return -1 if no common elements

For example:

nums1 = [2,3,3,5,6,78,9]
nums2 = [7,89,9,9,9,2]

Approach:

Using the built in intersection method

Can you use Python's built-in function or not?
Change the arrays in-place?
Python set vs list
set: guarantees the elements are unique
set: does not keep the order of elements
list operation keeps shadow of the list, but set does not. In other words, set is fast
set is hashable

def intersection(nums1, nums2):
    if len(nums1) == 0 or len(nums2) == 0:
        return []
    
    a = set(nums1)
    b = set(nums2)
    c = a.intersection(b)
    
    return list(c)
    
def intersection(nums1, nums2):
    
    if nums1 is None or nums2 is None or len(nums1) == 0 or len(nums2) == 0:
        return []
    
    return list(set(nums1) - (set(nums1) - set(nums2)))
    
def intersection(nums1, nums2):
   
    if nums1 is None or nums2 is None or len(nums1) == 0 or len(nums2) == 0:
        return []
    
    res = [item for item in nums1 if item in nums2]
    
    return list(set(res))
    
def intersection(nums1, nums2):
   
    if nums1 is None or nums2 is None or len(nums1) == 0 or len(nums2) == 0:
        return []
    
    n2 = len(nums2)
    for i in range(len(nums1)):
        if nums1[i] in nums2:
            nums2.append(nums1[i])

    return list(set(nums2[n2:]))
