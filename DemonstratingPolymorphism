

class Shark():
    def swim(self):
        print("The shark is swimming.")

    def swim_backwards(self):
        print("The shark cannot swim backwards")

    def skeleton(self):
        print("The shark's skeleton is made of cartilage.")

class Clownfish():
     def swim(self):
         print("Clownfish is swimming.")
   
     def swim_backwards(self):
         print("The clownfish can swim backwards.")

     def skeleton(self):
         print("The clownfish's skeleton is made of bone.")

In the code above, both the Shark and Clownfish class have three methods with the same name in common. However, each of the functionalities of these methods differ for each class.

Instantiate the classes into two objects:

sammy = Shark()
sammy.skeleton()

casey = Clownfish()
casey.skeleton()

for fish in (sammy,casey):
    fish.swim()
    fish.swim_backwards()
    fish.skeleton()

#
The shark is swimming.
The shark cannot swim backwards, but can sink backwards.
The shark's skeleton is made of cartilage.
The clownfish is swimming.
The clownfish can swim backwards.
The clownfish's skeleton is made of bone.

Polymorphism with a function

def in_the_pacific(fish):
    fish.swim()

sammy = Shark()

casey = Clownfish()

in_the_pacific(sammy)
in_the_pacific(casey)

Output:

The shark is swimming.
The clownfish is swimming.

