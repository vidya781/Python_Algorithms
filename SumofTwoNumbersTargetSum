Given an array A[] and a number x, check for pair in A[] with sum as x
Write a Python program that, given an array A[] of n numbers and another number x, determines whether or not there exist two elements in S whose sum is exactly x.

hasArrayTwoCandidates (A[], ar_size, sum)
1) Sort the array in non-decreasing order.
2) Initialize two index variables to find the candidate 
   elements in the sorted array.
       (a) Initialize first to the leftmost index: l = 0
       (b) Initialize second  the rightmost index:  r = ar_size-1
3) Loop while l < r.
       (a) If (A[l] + A[r] == sum)  then return 1
       (b) Else if( A[l] + A[r] <  sum )  then l++
       (c) Else r--    
4) No candidates in whole array - return 0

TC: Depends on what sorting algorithm we use. Quicksort O(n^2) in worst case
merge Sort or Heap Sort (nlogn) in Worst case

Auxiliary Space: Again, depends on sorting algo. For example, aux space is O(n)) for mergesort and O91) for heapsort'

Array {1,4,45,6,10,-8} and sum to be 16

A = {-8,1,4,6,10,45}

l = 0, r = 5

A[l] + A[r] (-8 + 45) > 16 ==> decrement r Now r = 10
A[l] + A[r] )-8 + 10) increment l. Now l = 1
A[l] + A[r] (1 + 10) increment l Now l = 2
A[l] + A[r] (4 + 10) increment l. Now l = 3
A[l] + A[r] (6 + 10) == 16 ==> Found candidates ( return 1)

def hasarraytwocandidates(A,arrsize,x):
    quicksort(A,0,arrsize-1)
    l = 0
    r = arrsize-1
    while l < r:
        if(A[l] + A[r] == x):
            return l
        elif(A[l] + A[r] < x):
            l += 1
         else:
            r -= 1
     return 0

# Implementation of Quicksort

# A[]---> Array to be sorted
# si---start index
# ei---ending index

def quicksort(A,si,ei):
    if si < ei:
       pi = partition(A,si,ei)
       quicksort(A,si,pi-1)
       quicksort(A,pi+1,ei)

# Utility function for partitioning the array in quicksort

def partition(A,si,ei):
    x = A[ei]
    i = (si-1)
    for j in range(si,ei):
        if A[j] <= x:
            i += 1
            
            # This operation is used to swap two variables in Python
            A[i],A[j] = A[j],A[i]
        A[i+1],A[ei] = A[ei],A[i+1]
     return i + 1

A = [1,4,45,6,10,-8]
n = 16
if(hasArrayTwoCandidates(A,len(A),n)):
    print("Array has two elems with the given sum")
else:
    print("Array does not have two elems with the given sum")
