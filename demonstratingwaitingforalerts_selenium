The objective of this script is to use explicit wait on alerts and frames. Sometimes a complex JS processing or backend request might take time to display the alert to the user. In order to circumvent this
we use the alert_is_present condition.

Assume we have a Click to Compare link on the chosen site. The idea is to show a e very generic script and demo the functionality of the alert_is_present.

from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions
import unittest

class CompareProducts(unittest.TestCase):
    def setUp(self):
        self.driver = webdriver.Firefox()
        self.driver.get("http://google.com/")   # or your chosen website
        
    def test_compare_products_removal_alert(self):
        # get the search textbox
        search_field = self.driver.find_element_by_name("q")
        search_field.clear()
        
        # enter search keyword and submit
        search_field.send_keys("phones")
        search_field.submit()
        
        # Click the Add to compare links
        self.driver.\
            find_element_by_link_text("Click to Compare").click()
            
        # wait for Clear All link to be visible
        clear_all_link = WebDriverWait(self.driver,10)\
            .until(expected_conditions,visibility_of_element_located((By.LINK_TEXT,"Clear All")))
            
        #Click on Clear All link,
        # this will display an alert to the user
        clear_all_link.click()
        
        # wait for the alert to present
        alert = WebDriverWait(self.driver,10)\
            .until(expected_conditions.alert_is_present())
            
        # get the text from alert
        alert_text = alert.text
        
        # check alert text
        self.assertEqual("Are you sure, you would like to remove all products from your comparison?",alert_text)
        # click on Ok button
        alert.accept()
        
    def tearDown(self):
        self.driver.quit()
        
    if __name__ == "__main__":
        unittest.main(verbosity=2)
        
  Suppose you have a website that compares products. This script above validates the removal of products from the product comparsion feature of
  the application.Users will be sent a confirmation alert when they remove a product from the comparsion. The script will wait for 10 seconds checking 
  for the presence of the alert otherwise it will raise an exception.
  
